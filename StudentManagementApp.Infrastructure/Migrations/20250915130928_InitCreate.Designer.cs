// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentManagementApp.Infrastructure.Data;

#nullable disable

namespace StudentManagementApp.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250915130928_InitCreate")]
    partial class InitCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "hoc_vien",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Học viên",
                            SortOrder = 1,
                            Type = "Role"
                        },
                        new
                        {
                            Id = 2,
                            Code = "tieu_truong",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tiểu đội trưởng",
                            SortOrder = 2,
                            Type = "Role"
                        },
                        new
                        {
                            Id = 3,
                            Code = "lop_truong",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Lớp trưởng",
                            SortOrder = 3,
                            Type = "Role"
                        },
                        new
                        {
                            Id = 4,
                            Code = "hoc_tap",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Lớp phó học tập",
                            SortOrder = 4,
                            Type = "Role"
                        },
                        new
                        {
                            Id = 5,
                            Code = "hau_can",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Lớp phó hậu cần",
                            SortOrder = 5,
                            Type = "Role"
                        },
                        new
                        {
                            Id = 6,
                            Code = "kt_15p",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Kiểm tra 15 phút",
                            SortOrder = 1,
                            Type = "ExamType"
                        },
                        new
                        {
                            Id = 7,
                            Code = "kt_1t",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Kiểm tra 1 tiết",
                            SortOrder = 2,
                            Type = "ExamType"
                        },
                        new
                        {
                            Id = 8,
                            Code = "thi",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Thi cuối môn",
                            SortOrder = 3,
                            Type = "ExamType"
                        },
                        new
                        {
                            Id = 9,
                            Code = "B2",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Binh nhì",
                            SortOrder = 1,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 10,
                            Code = "B1",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Binh nhất",
                            SortOrder = 2,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 11,
                            Code = "H1",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Hạ sĩ",
                            SortOrder = 3,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 12,
                            Code = "H2",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Trung sĩ",
                            SortOrder = 4,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 13,
                            Code = "H3",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Thượng sĩ",
                            SortOrder = 5,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 14,
                            Code = "1/",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Thiếu úy",
                            SortOrder = 6,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 15,
                            Code = "2/",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Trung úy",
                            SortOrder = 7,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 16,
                            Code = "3/",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Thượng úy",
                            SortOrder = 8,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 17,
                            Code = "4/",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Đại úy",
                            SortOrder = 9,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 18,
                            Code = "1//",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Thiếu tá",
                            SortOrder = 10,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 19,
                            Code = "2//",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Trung tá",
                            SortOrder = 11,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 20,
                            Code = "3//",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Thượng tá",
                            SortOrder = 12,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 21,
                            Code = "4//",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Đại tá",
                            SortOrder = 13,
                            Type = "MilitaryRank"
                        });
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("SchoolYearId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalStudents")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SchoolYearId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.SchoolYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SchoolYears");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("AverageScore")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClassId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DayOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EnlistmentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FatherFullName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("FatherPhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MeritScore")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MilitaryRank")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("MotherFullName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("MotherPhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("Trainees");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Class", b =>
                {
                    b.HasOne("StudentManagementApp.Core.Entities.SchoolYear", "SchoolYear")
                        .WithMany("Classes")
                        .HasForeignKey("SchoolYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchoolYear");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Trainee", b =>
                {
                    b.HasOne("StudentManagementApp.Core.Entities.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.SchoolYear", b =>
                {
                    b.Navigation("Classes");
                });
#pragma warning restore 612, 618
        }
    }
}
