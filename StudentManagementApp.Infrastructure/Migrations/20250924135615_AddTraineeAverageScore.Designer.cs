// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentManagementApp.Infrastructure.Data;

#nullable disable

namespace StudentManagementApp.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250924135615_AddTraineeAverageScore")]
    partial class AddTraineeAverageScore
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "hoc_vien",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Học viên",
                            ParentId = 0,
                            SortOrder = 1,
                            Type = "Role"
                        },
                        new
                        {
                            Id = 2,
                            Code = "tieu_truong",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tiểu đội trưởng",
                            ParentId = 0,
                            SortOrder = 2,
                            Type = "Role"
                        },
                        new
                        {
                            Id = 3,
                            Code = "lop_truong",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Lớp trưởng",
                            ParentId = 0,
                            SortOrder = 3,
                            Type = "Role"
                        },
                        new
                        {
                            Id = 4,
                            Code = "hoc_tap",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Lớp phó học tập",
                            ParentId = 0,
                            SortOrder = 4,
                            Type = "Role"
                        },
                        new
                        {
                            Id = 5,
                            Code = "hau_can",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Lớp phó hậu cần",
                            ParentId = 0,
                            SortOrder = 5,
                            Type = "Role"
                        },
                        new
                        {
                            Id = 6,
                            Code = "kt_15p",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Kiểm tra 15 phút",
                            ParentId = 0,
                            SortOrder = 1,
                            Type = "ExamType"
                        },
                        new
                        {
                            Id = 7,
                            Code = "kt_1t",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Kiểm tra 1 tiết",
                            ParentId = 0,
                            SortOrder = 2,
                            Type = "ExamType"
                        },
                        new
                        {
                            Id = 8,
                            Code = "thi",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Thi cuối môn",
                            ParentId = 0,
                            SortOrder = 3,
                            Type = "ExamType"
                        },
                        new
                        {
                            Id = 9,
                            Code = "B2",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Binh nhì",
                            ParentId = 0,
                            SortOrder = 1,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 10,
                            Code = "B1",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Binh nhất",
                            ParentId = 0,
                            SortOrder = 2,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 11,
                            Code = "H1",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Hạ sĩ",
                            ParentId = 0,
                            SortOrder = 3,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 12,
                            Code = "H2",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Trung sĩ",
                            ParentId = 0,
                            SortOrder = 4,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 13,
                            Code = "H3",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Thượng sĩ",
                            ParentId = 0,
                            SortOrder = 5,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 14,
                            Code = "1/",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Thiếu úy",
                            ParentId = 0,
                            SortOrder = 6,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 15,
                            Code = "2/",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Trung úy",
                            ParentId = 0,
                            SortOrder = 7,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 16,
                            Code = "3/",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Thượng úy",
                            ParentId = 0,
                            SortOrder = 8,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 17,
                            Code = "4/",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Đại úy",
                            ParentId = 0,
                            SortOrder = 9,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 18,
                            Code = "1//",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Thiếu tá",
                            ParentId = 0,
                            SortOrder = 10,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 19,
                            Code = "2//",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Trung tá",
                            ParentId = 0,
                            SortOrder = 11,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 20,
                            Code = "3//",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Thượng tá",
                            ParentId = 0,
                            SortOrder = 12,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 21,
                            Code = "4//",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Đại tá",
                            ParentId = 0,
                            SortOrder = 13,
                            Type = "MilitaryRank"
                        },
                        new
                        {
                            Id = 22,
                            Code = "ha_noi_01",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Thành phố Hà Nội",
                            ParentId = 0,
                            SortOrder = 1,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 23,
                            Code = "cao_bang_04",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Cao Bằng",
                            ParentId = 0,
                            SortOrder = 2,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 24,
                            Code = "tuyen_quang_08",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Tuyên Quang",
                            ParentId = 0,
                            SortOrder = 3,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 25,
                            Code = "dien_bien_11",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Điện Biên",
                            ParentId = 0,
                            SortOrder = 4,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 26,
                            Code = "lai_chau_12",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Lai Châu",
                            ParentId = 0,
                            SortOrder = 5,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 27,
                            Code = "son_la_14",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Sơn La",
                            ParentId = 0,
                            SortOrder = 6,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 28,
                            Code = "lao_cai_15",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Lào Cai",
                            ParentId = 0,
                            SortOrder = 7,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 29,
                            Code = "thai_nguyen_19",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Thái Nguyên",
                            ParentId = 0,
                            SortOrder = 8,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 30,
                            Code = "lang_son_20",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Lạng Sơn",
                            ParentId = 0,
                            SortOrder = 9,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 31,
                            Code = "quang_ninh_22",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Quảng Ninh",
                            ParentId = 0,
                            SortOrder = 10,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 32,
                            Code = "bac_ninh_24",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Bắc Ninh",
                            ParentId = 0,
                            SortOrder = 11,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 33,
                            Code = "phu_tho_25",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Phú Thọ",
                            ParentId = 0,
                            SortOrder = 12,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 34,
                            Code = "hai_phong_31",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Thành phố Hải Phòng",
                            ParentId = 0,
                            SortOrder = 13,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 35,
                            Code = "hung_yen_33",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Hưng Yên",
                            ParentId = 0,
                            SortOrder = 14,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 36,
                            Code = "ninh_binh_37",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Ninh Bình",
                            ParentId = 0,
                            SortOrder = 15,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 37,
                            Code = "thanh_hoa_38",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Thanh Hóa",
                            ParentId = 0,
                            SortOrder = 16,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 38,
                            Code = "nghe_an_40",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Nghệ An",
                            ParentId = 0,
                            SortOrder = 17,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 39,
                            Code = "ha_tinh_42",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Hà Tĩnh",
                            ParentId = 0,
                            SortOrder = 18,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 40,
                            Code = "quang_tri_44",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Quảng Trị",
                            ParentId = 0,
                            SortOrder = 19,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 41,
                            Code = "hue_46",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Thành phố Huế",
                            ParentId = 0,
                            SortOrder = 20,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 42,
                            Code = "da_nang_48",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Thành phố Đà Nẵng",
                            ParentId = 0,
                            SortOrder = 21,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 43,
                            Code = "quang_ngai_51",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Quảng Ngãi",
                            ParentId = 0,
                            SortOrder = 22,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 44,
                            Code = "gia_lai_52",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Gia Lai",
                            ParentId = 0,
                            SortOrder = 23,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 45,
                            Code = "khanh_hoa_56",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Khánh Hòa",
                            ParentId = 0,
                            SortOrder = 24,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 46,
                            Code = "dak_lak_66",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Đắk Lắk",
                            ParentId = 0,
                            SortOrder = 25,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 47,
                            Code = "lam_dong_68",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Lâm Đồng",
                            ParentId = 0,
                            SortOrder = 26,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 48,
                            Code = "dong_nai_75",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Đồng Nai",
                            ParentId = 0,
                            SortOrder = 27,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 49,
                            Code = "ho_chi_minh_79",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Thành phố Hồ Chí Minh",
                            ParentId = 0,
                            SortOrder = 28,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 51,
                            Code = "tay_ninh_80",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Tây Ninh",
                            ParentId = 0,
                            SortOrder = 29,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 52,
                            Code = "dong_thap_82",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Đồng Tháp",
                            ParentId = 0,
                            SortOrder = 30,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 53,
                            Code = "vinh_long_86",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Vĩnh Long",
                            ParentId = 0,
                            SortOrder = 31,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 54,
                            Code = "an_giang_91",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh An Giang",
                            ParentId = 0,
                            SortOrder = 32,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 55,
                            Code = "can_tho_92",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Thành phố Cần Thơ",
                            ParentId = 0,
                            SortOrder = 33,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 56,
                            Code = "ca_mau_96",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tỉnh Cà Mau",
                            ParentId = 0,
                            SortOrder = 34,
                            Type = "Provinces"
                        },
                        new
                        {
                            Id = 57,
                            Code = "mam_non",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Mầm non",
                            ParentId = 0,
                            SortOrder = 1,
                            Type = "EducationLevel"
                        },
                        new
                        {
                            Id = 58,
                            Code = "tieu_hoc",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tiểu học",
                            ParentId = 0,
                            SortOrder = 2,
                            Type = "EducationLevel"
                        },
                        new
                        {
                            Id = 59,
                            Code = "thcs",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Trung học cơ sở",
                            ParentId = 0,
                            SortOrder = 3,
                            Type = "EducationLevel"
                        },
                        new
                        {
                            Id = 60,
                            Code = "thpt",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Trung học phổ thông",
                            ParentId = 0,
                            SortOrder = 4,
                            Type = "EducationLevel"
                        },
                        new
                        {
                            Id = 61,
                            Code = "trung_cap",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Trung cấp",
                            ParentId = 0,
                            SortOrder = 5,
                            Type = "EducationLevel"
                        },
                        new
                        {
                            Id = 62,
                            Code = "cao_dang",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Cao đẳng",
                            ParentId = 0,
                            SortOrder = 6,
                            Type = "EducationLevel"
                        },
                        new
                        {
                            Id = 63,
                            Code = "dai_hoc",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Đại học",
                            ParentId = 0,
                            SortOrder = 7,
                            Type = "EducationLevel"
                        },
                        new
                        {
                            Id = 64,
                            Code = "thac_si",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Thạc sĩ",
                            ParentId = 0,
                            SortOrder = 8,
                            Type = "EducationLevel"
                        },
                        new
                        {
                            Id = 65,
                            Code = "tien_si",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Tiến sĩ",
                            ParentId = 0,
                            SortOrder = 9,
                            Type = "EducationLevel"
                        },
                        new
                        {
                            Id = 66,
                            Code = "pho_giao_su",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Phó Giáo sư",
                            ParentId = 0,
                            SortOrder = 10,
                            Type = "EducationLevel"
                        },
                        new
                        {
                            Id = 67,
                            Code = "giao_su",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Giáo sư",
                            ParentId = 0,
                            SortOrder = 11,
                            Type = "EducationLevel"
                        },
                        new
                        {
                            Id = 68,
                            Code = "sang",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Buổi sáng",
                            ParentId = 0,
                            SortOrder = 1,
                            Type = "SchedulePeriod"
                        },
                        new
                        {
                            Id = 69,
                            Code = "chieu",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Buổi chiều",
                            ParentId = 0,
                            SortOrder = 2,
                            Type = "SchedulePeriod"
                        },
                        new
                        {
                            Id = 70,
                            Code = "vang",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Vắng",
                            ParentId = 0,
                            SortOrder = 1,
                            Type = "MisconductType"
                        },
                        new
                        {
                            Id = 71,
                            Code = "vi_pham_ky_luat",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Vi phạm kỷ luật",
                            ParentId = 0,
                            SortOrder = 2,
                            Type = "MisconductType"
                        },
                        new
                        {
                            Id = 72,
                            Code = "di_tre",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Đi trễ",
                            ParentId = 0,
                            SortOrder = 3,
                            Type = "MisconductType"
                        },
                        new
                        {
                            Id = 73,
                            Code = "gian_lan_kiem_tra",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Gian lận kiểm tra",
                            ParentId = 0,
                            SortOrder = 4,
                            Type = "MisconductType"
                        },
                        new
                        {
                            Id = 74,
                            Code = "mat_trat_tu",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Mất trật tự",
                            ParentId = 0,
                            SortOrder = 5,
                            Type = "MisconductType"
                        },
                        new
                        {
                            Id = 75,
                            Code = "khac",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Khác",
                            ParentId = 0,
                            SortOrder = 6,
                            Type = "MisconductType"
                        });
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("SchoolYearId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalStudents")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SchoolYearId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Grades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExamType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Grade")
                        .HasColumnType("TEXT");

                    b.Property<string>("GradeType")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("SemesterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TraineeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TraineeId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Misconduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.Property<int>("TraineeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TraineeId");

                    b.ToTable("Misconducts");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.SchoolYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SchoolYears");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("SchoolYearId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SchoolYearId");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.SubjectAverage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("GradeType")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Score")
                        .HasColumnType("TEXT");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TraineeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TraineeId");

                    b.ToTable("SubjectAverages");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddressForCorrespondence")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("AverageScore")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClassId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DayOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("EducationalLevel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EnlistmentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ethnicity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FatherFullName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("FatherPhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HealthStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IdentityCard")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MeritScore")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MilitaryRank")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("MotherFullName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("MotherPhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PlaceOfOrigin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PlaceOfPermanentResidence")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProvinceOfEnlistment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("Trainees");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.TraineeAverageScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AverageScore")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("GradeType")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("SemesterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TraineeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.HasIndex("TraineeId");

                    b.ToTable("TraineeAverageScores");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Class", b =>
                {
                    b.HasOne("StudentManagementApp.Core.Entities.SchoolYear", "SchoolYear")
                        .WithMany("Classes")
                        .HasForeignKey("SchoolYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchoolYear");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Grades", b =>
                {
                    b.HasOne("StudentManagementApp.Core.Entities.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagementApp.Core.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagementApp.Core.Entities.Trainee", "Trainee")
                        .WithMany()
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");

                    b.Navigation("Subject");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Misconduct", b =>
                {
                    b.HasOne("StudentManagementApp.Core.Entities.Trainee", "Trainee")
                        .WithMany()
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Schedule", b =>
                {
                    b.HasOne("StudentManagementApp.Core.Entities.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagementApp.Core.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Semester", b =>
                {
                    b.HasOne("StudentManagementApp.Core.Entities.SchoolYear", "SchoolYear")
                        .WithMany()
                        .HasForeignKey("SchoolYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchoolYear");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.SubjectAverage", b =>
                {
                    b.HasOne("StudentManagementApp.Core.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagementApp.Core.Entities.Trainee", "Trainee")
                        .WithMany()
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.Trainee", b =>
                {
                    b.HasOne("StudentManagementApp.Core.Entities.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.TraineeAverageScore", b =>
                {
                    b.HasOne("StudentManagementApp.Core.Entities.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagementApp.Core.Entities.Trainee", "Trainee")
                        .WithMany()
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("StudentManagementApp.Core.Entities.SchoolYear", b =>
                {
                    b.Navigation("Classes");
                });
#pragma warning restore 612, 618
        }
    }
}
