<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="somethingToolStripMenuItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>